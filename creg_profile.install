<?php

/**
 * @file
 * Install, update and uninstall functions for the icck_cromos_profile installation profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function creg_profile_install() {
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  //Creating admin role
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
      ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
      ->execute();

  // Assign permission 'use PHP for settings' to admin role
  db_insert('role_permission')
      ->fields(array('rid' => $admin_role->rid, 'permission' => 'use PHP for settings', 'module' => 'system'))
      ->execute();

  // Enabled and disabled componenents
  theme_disable(array('bartik', 'seven'));
  theme_enable(array('bootstrap', 'adminimal'));

  // Insert default pre-defined node types into the database. For a complete
  // list of available node type attributes, refer to the node type API
  // documentation at: http://api.drupal.org/api/HEAD/function/hook_node_info.
  $types = array(
    array(
      'type' => 'page',
      'name' => st('Basic page'),
      'base' => 'node_content',
      'description' => st("Use <em>basic pages</em> for your static content, such as an 'About us' page."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }
}

/**
 * Implements hook_install_tasks().
 */
function creg_profile_install_tasks(&$install_state) {
  $tasks = array();

  $tasks['initilice_vars'] = array(
    'display_name' => st('Initializing vars'),
    'display' => TRUE,
    'type' => 'batch',
    'run' => INSTALL_TASK_RUN_IF_REACHED,
    'function' => 'initilice_vars',
  );

  return $tasks;
}

/**
 * Callback function for the 'additional_roles' task.
 */
function initilice_vars(&$context) {
  $enable = array(
    'theme_default' => 'bootstrap',
    'admin_theme' => 'adminimal',
    'node_admin_theme' => TRUE,
    'date_default_timezone' => 'America/Bogota',
    'filter_fallback_format' => 'plain_text',
    'site_default_country' => 'CO',
    'site_name' => 'CREG',
    'configuration_config_path' => 'profiles/creg_profile/config'
  );

  foreach ($enable as $var => $value) {
    if (!is_numeric($var)) {
      variable_set($var, $value);
    }
  }
}
